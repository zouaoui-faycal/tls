name: Docker Build & Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [prereleased,released]
    
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: build
      run: echo "build"
      
  trivy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' || github.event_name == 'pull_request'
    steps:
    - name: trivy
      run: echo "trivy"
      
  deploy-integration-and-staging:
    needs: 
      - build
      - trivy    
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' || github.event_name == 'pull_request'

    steps:
    - name: Deploy to Integration and Staging
      run: |
        # Deployment scripts for integration (int) and staging (stg)
        echo "Deploy to Integration and Staging"

  deploy-pre-production:
    needs: 
      - build
    runs-on: ubuntu-latest
    if: github.event.release.prerelease == true

    steps:
    - name: Deploy to Pre-production
      run: |
        # Deployment script for pre-production (ppd)
        echo "Deployment script for pre-production (ppd)"

  release:
    runs-on: ubuntu-latest
    needs: deploy-pre-production
    steps:
    
    - name: Deploy to Production
      run: echo "RELEASE"
      
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Release 
      uses: dsaltares/fetch-gh-release-asset@master
      with:
        version: 'tags/v1.0.2'
        file: 'test-app.zip'
        token: ${{ secrets.GITHUB_TOKEN }}   
        
        
  deploy-production:
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'released'
    needs: release
    steps:
    - name: Deploy to Production
      run: |
        # Deployment script for production (prd)
        echo "Deployment script for production (prd)"
