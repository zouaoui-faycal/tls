name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3


    - name: install acme
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}    
      run: |
        # git clone https://github.com/acmesh-official/acme.sh.git
        # cd ./acme.sh
        # ./acme.sh --install -m zouaoui.faycal.p@gmail.com
        # env
        # /home/runner/.acme.sh/acme.sh --issue  -d wedreamteam.com  --dns dns_aws --keylength 4096 --server letsencrypt
        # cp /home/runner/.acme.sh/wedreamteam.com/wedreamteam.com.cer wedreamteam.com.pem
        # cp /home/runner/.acme.sh/wedreamteam.com/wedreamteam.com.key .
        openssl req -config cert.conf -newkey rsa:2048 -nodes -keyout wedreamteam.com.key -x509 -days 365 -out wedreamteam.com.pem


      
    - name: Build the Docker image
      run: cd $GITHUB_WORKSPACE &&  docker build . --file Dockerfile --tag tls:$(date +%s)
    
    - name: 'Get Login to AWS ECR'
      id: ecr-login
      uses: thalesvon/ecr-login@master
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_DEFAULT_OUTPUT: json
        AWS_REGION: eu-west-3
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      with:
        args: 'get-login --no-include-email --region ${AWS_REGION}'
    - name: 'Docker Login'
      run: ${{ steps. ecr-login.outputs.login-string }}

    - name: push to ecr 
      run: |
        docker tag tls:$(date +%s) 785747403946.dkr.ecr.eu-west-3.amazonaws.com/tls:$(date +%s)
        docker push 785747403946.dkr.ecr.eu-west-3.amazonaws.com/tls:$(date +%s)

    - name: restart task   
      run: aws ecs  update-service --cluster tls --service tls-svc --force-new-deployment

