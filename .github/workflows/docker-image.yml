name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  generate_certificate:
    runs-on: ubuntu-latest
    steps:
    - name: checkout  
      uses: actions/checkout@v3      
      
    - name: install acme
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}    
      run: |
        # git clone https://github.com/acmesh-official/acme.sh.git
        # cd ./acme.sh
        # ./acme.sh --install -m zouaoui.faycal.p@gmail.com
        # env
        # /home/runner/.acme.sh/acme.sh --issue  -d wedreamteam.com  --dns dns_aws --keylength 4096 --server letsencrypt
        # cp /home/runner/.acme.sh/wedreamteam.com/wedreamteam.com.cer wedreamteam.com.pem
        # cp /home/runner/.acme.sh/wedreamteam.com/wedreamteam.com.key .
        openssl req -config cert.conf -newkey rsa:2048 -nodes -keyout wedreamteam.com.key -x509 -days 365 -out wedreamteam.com.pem
        cat wedreamteam.com.key > wedreamteam.com.key
        cat wedreamteam.com.pem > wedreamteam.com.pem

    - name: Archiver le fichier de sortie
      uses: actions/upload-artifact@v2
      with:
        name: cert
        path: wedreamteam.com.key
    
    - name: Archiver le fichier de sortie
      uses: actions/upload-artifact@v2
      with:
        name: key
        path: wedreamteam.com.pem          

  build:
    runs-on: ubuntu-latest  
    needs: generate_certificate
    steps:
    - name: checkout  
    uses: actions/checkout@v3       

    - name: Télécharger l'artefact
      uses: actions/download-artifact@v2
      with:
        name: cert      
    
    - name: Télécharger l'artefact
      uses: actions/download-artifact@v2
      with:
        name: key   

    - name: Build the Docker image
      run: ls &&  docker build . --file Dockerfile --tag tls:$(date +%s)

    # - name: ecr login  
    #   uses: kciter/aws-ecr-action@v4
    #   with:
    #     access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     account_id: ${{ secrets.AWS_ACCOUNT_ID }}
    #     repo: tls
    #     region: eu-west-3
    #     tags: latest,${{ github.sha }}
    #     create_repo: true
    #     image_scanning_configuration: false
    #     set_repo_policy: false

    # - name: restart task   
    #   run: aws s3 ls #ecs  update-service --cluster tls --service tls-svc --force-new-deployment
    #   env:
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
