name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  
  GH_TOKEN: ${{ secrets.GH_TOKEN }} 
  AWS_REGION: "eu-west-3"

jobs:   
  build:
    runs-on: ubuntu-latest  
    if: ${{ contains(github.event.head_commit.message, 'build') }}
    needs: generate_certificate
    steps:
    - name: checkout  
      uses: actions/checkout@v3   

    - name: 
      uses: ./.github/workflows/certificate.yml

    - name: Build the Docker image
      run: ls &&  docker build . --file Dockerfile --tag tls:$(date +%s)

    - name: ecr login  
      uses: kciter/aws-ecr-action@v4
      with:
        access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        account_id: ${{ secrets.AWS_ACCOUNT_ID }}
        repo: tls
        region: eu-west-3
        tags: latest
        create_repo: true
        image_scanning_configuration: false
        set_repo_policy: false

  deploy:
    runs-on: ubuntu-latest  
    if: ${{ contains(github.event.head_commit.message, 'deploy') }}
    needs: build
    steps:
    - name: restart task   
      run: aws ecs  update-service --cluster tls --service tls-svc --force-new-deployment
      env:
        AWS_EC2_METADATA_DISABLED: true
